// automatically generated by Xtext
grammar dk.itu.mdd.nbs.dsl.Dsl with org.eclipse.xtext.common.Terminals 

import "platform:/resource/dk.itu.mdd.nbs.model/model/nbs.ecore" 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Bicycle returns Bicycle:
	{Bicycle}
	'Bicycle'
	'{'
		('price' price=EDouble)?
		('deliveryDate' deliveryDate=EString)?
		('parts' '{' parts+=Part ( "," parts+=Part)* '}' )?
		('customerData' '{' customerData+=CustomerData ( "," customerData+=CustomerData)* '}' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
    '}';


Part returns Part:
	Frame | Wheel | InnerGear | OuterGear | Pedals | Saddle | HandBrakes | HandleBars;

CustomerData returns CustomerData:
	{CustomerData}
	'CustomerData'
	name=EString
	'{'
		('address' address=EString)?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
    '}';

Parameter returns Parameter:
	{Parameter}
	'Parameter'
	name=EString
	'{'
		('value' value=EString)?
    '}';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EString returns ecore::EString:
	STRING | ID;

enum Manufacturers returns Manufacturers:
	SuperParts = 'SuperParts' | HomeParts = 'HomeParts' | HandMadeParts = 'HandMadeParts';

EByte returns ecore::EByte:
	'-'? INT;

Frame returns Frame:
	{Frame}
	'Frame'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
		('frameType' frameType=FrameType)?
		('color' color=Color)?
    '}';

Wheel returns Wheel:
	{Wheel}
	'Wheel'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
    '}';

InnerGear returns InnerGear:
	{InnerGear}
	'InnerGear'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
    '}';

OuterGear returns OuterGear:
	{OuterGear}
	'OuterGear'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
    '}';

Pedals returns Pedals:
	{Pedals}
	'Pedals'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
		('pedalType' pedalType=PedalTypes)?
    '}';

Saddle returns Saddle:
	{Saddle}
	'Saddle'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
		('saddleType' saddleType=SaddleType)?
    '}';

HandBrakes returns HandBrakes:
	{HandBrakes}
	'HandBrakes'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
    '}';

HandleBars returns HandleBars:
	{HandleBars}
	'HandleBars'
	id=EByte
	'{'
		('price' price=EDouble)?
		('manufacturer' manufacturer=Manufacturers)?
		('name' name=EString)?
    '}';

enum FrameType returns FrameType:
	RacerFrame = 'RacerFrame' | CityFrame = 'CityFrame' | UnicycleFrame = 'UnicycleFrame';

enum Color returns Color:
	Red = 'Red' | Blue = 'Blue' | Black = 'Black' | Green = 'Green';

enum PedalTypes returns PedalTypes:
	ChildPedals = 'ChildPedals' | SportsPedals = 'SportsPedals' | ComfortPedals = 'ComfortPedals' | ExtremePedals = 'ExtremePedals';

enum SaddleType returns SaddleType:
	RacingSaddle = 'RacingSaddle' | ChildSaddle = 'ChildSaddle' | SpecialUnicycleSaddle = 'SpecialUnicycleSaddle' | ComfortSaddle = 'ComfortSaddle';
